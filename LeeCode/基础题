
基础例题

一、给定一个文本文件 file.txt，请只打印这个文件中的第十行。

	题目要求:

		假设 file.txt 有如下内容：

		Line 1
		Line 2
		Line 3
		Line 4
		Line 5
		Line 6
		Line 7
		Line 8
		Line 9
		Line 10
	
		你的脚本应当显示第十行： Line 10

	答案（两种）：

	  1. awk 'NR==10{print $0}' file.txt
	  2. sed -n '10p' file.txt


扩展：
   NR - Number of Record - 当前处理的行是第几行（因为awk是流处理工具，一行一行处理的，所以NR在不停的自增1)
   FNR - File Number of Record - 当前处理的行是当前处理文件的第几行
   NF - Number of Fileds - 当前行有多少列数据（这个在每行都会根据设定的分割符重新计算，默认分割符是任意连续的多个空白符）


二、 给定一个包含电话号码列表（一行一个电话号码）的文本文件 file.txt，写一个 bash 脚本输出所有有效的电话号码。

	题目要求：
		你可以假设一个有效的电话号码必须满足以下两种格式： (xxx) xxx-xxxx 或 xxx-xxx-xxxx。（x 表示一个数字）

		你也可以假设每行前后没有多余的空格字符。

		示例:

		假设 file.txt 内容如下：
		987-123-4567
		123 456 7890
		(123) 456-7890
		
		你的脚本应当输出下列有效的电话号码：
		987-123-4567
		(123) 456-7890
		
		
	答案（两种）：
	  
	  1. awk '/^(\([0-9]{3}\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/ {print $0}' file.txt
	  2. cat file.txt | grep '^\(([0-9]\{3\}) \|[0-9]\{3\}-\)[0-9]\{3\}-[0-9]\{4\}$'
	  

扩展：
	在此种单纯查找字符方面，grep命令要快速很多

	
		
		














	