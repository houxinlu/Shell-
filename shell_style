Shell style

shell编程风格规则：
  1. 背景： 
	  shell 作为脚本语言，适合与小工具和简单的包装脚本，也是运维工作者需要熟练掌握的基础语言。
 
  2. Shell文件和解释器调用：
	  文件扩展名：  可执行文件最好是没有扩展名。库必须有一个.sh的扩展名，但不可以执行。
          SUID/SGID： 是禁止在shell脚本中使用的，会造成不安全的影响。  
  
  3.环境(写作规范):
	  STDOUT vs STDERR：在写代码的时候应该合理的考虑逻辑上是否存在错误，并且应将所有的错误输
      出出来，防止产生错误。
  
  4.注释:
	  文件标题（注释代码主旨），函数注释（任何不显而易见的函数都必须注释，库中的任何函数都必
      须进行注释），尽可能注释代码有趣的，重要的，难以理解的地方。
  
  5.格式化:
	  缩进：两个空格
	  行的长度：80个字符
	  管道：如果管道不全都在一条线上，那么就把管道分开，每个管道符 分成一行
          循环：do,then 需要和 while,for or if 在同一条线上
  
  6.Features and Bugs:
	  命令替换：使用$(command)；
	  [ and [[: [[ 在使用上更加的强，[[ 比 [ 更加的有约束性，所以更加规范，错误率更小，而且在
       正则方面支持更加强大；
	  测试字符串：尽可能使用“”，而不是填充字符串（比如空格等），不然在不用 -z 或 -n 的情况下，
       字符串是没有定义，则会报错；

  7.文件名的通配符扩展：
	  最好不要使用*，如果必须使用无比在前面加上 ./* 

  8.eval
	  在不完全明白的情况下，尽量不要使用eval,它可以将可执行的字符串当作命令执行。

  9.Pipes to While

  10.命名规则：
	  函数名称：小写 + “_” , 变量名称也一样。
	  常量和环境变量名称：所有大写，用“_”分隔，在文件顶部声明。
 	  源文件名：小写，如若需要用”_“分隔。
          只读变量：使用readonly或declare -r 进行设置。
          局部变量：使用local。声明函数特定的变量。
          功能位置：在文件中 将所有函数的书写位置放在常量下面。
              main: 将所有函数入口放在main中。

  11.调用命令：
          返回值的设定：确保所有的执行都有返回值，并确定返回值意义都明确。
          内建命令与外部命令： 无特殊需要的情况下，选择内建命令。	  
	
q
  
  



